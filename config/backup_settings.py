"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
import environ

Auth_Key = ""

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
SECRET_KEY = "django-insecure-)@!o47gbyj#gb=9rf472&iy@^jktlqo(6*9r15ok16nkfma&8v"
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

AUTH_USER_MODEL = "PLAN_ACCESS.User"

DEFAULT_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

OTHER_APPS = [
    "rest_framework",
    "rest_framework.authtoken",
    "corsheaders",
]

CUSTOM_APPS = [
    "apps.BASE",
    "apps.PLAN_ACCESS",
    "apps.PLAN_ADMIN",
    "apps.WEBSITE",
]

INSTALLED_APPS = DEFAULT_APPS + OTHER_APPS + CUSTOM_APPS

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
]

AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",
]

CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework.authentication.TokenAuthentication",
    )
}


WSGI_APPLICATION = "config.wsgi.application"

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}

local = "http://127.0.0.1:8000/"
staging = "https://nexstaging.roririsoft.com/"
deployment = "https://backendlive.nexemy.com/"
Backup_Password = "Nexemy@2024"
Backup_OTP = "202400"

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',  # Use MySQL backend
#         'NAME': 'db_staging_erp',              # Database name
#         'USER': 'TestERP',                     # Your database username
#         'PASSWORD': 'TestERP@2024',            # Your database password
#         'HOST': '92.205.4.188',                # Host (use 'localhost' if hosted locally on cPanel)
#         'PORT': '3306',                        # Default MySQL port
#     }
# }


# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',  # MySQL database backend
#         'NAME': 'db_Roriri_ERP',               # The name of the MySQL database (updated)
#         'USER': 'roririERP',                   # MySQL username (updated)
#         'PASSWORD': 'RoririERP@2024',          # MySQL password (updated)
#         'HOST': '92.205.4.188',                # Server IP or hostname
#         'PORT': '3306',                        # Default MySQL port
#     }
# }

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "Asia/Kolkata"

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

# Static
# ------------------------------------------------------------------------------
STATIC_URL = "/staticfiles/"
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")
STATICFILES_DIRS = [os.path.join(BASE_DIR, "static")]
STATICFILES_FINDERS = [
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
]

MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = ""
EMAIL_HOST_PASSWORD = ""


env = environ.Env()
env.read_env(str(BASE_DIR / ".env"))

# Razorpay
# -------------------------------------------------------------------------------
RAZORPAY_KEY_ID = env.str("RAZORPAY_KEY_ID")
RAZORPAY_SECRET_KEY = env.str("RAZORPAY_SECRET_KEY")


# EMAIL_BACKEND = env.str("EMAIL_BACKEND")
# EMAIL_HOST = env.str("EMAIL_HOST")
# EMAIL_PORT = env.str("EMAIL_PORT")
# EMAIL_USE_TLS = env.str("EMAIL_USE_TLS")
# EMAIL_HOST_USER = env.str("EMAIL_HOST_USER")
# EMAIL_HOST_PASSWORD = env.str("EMAIL_HOST_PASSWORD")


LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "filters": {"request_id": {"()": "log_request_id.filters.RequestIDFilter"}},
    "formatters": {
        "aws": {
            "format": "%(levelname)-8s [%(asctime)s] %(request_id)s: %(message)s",
            "datefmt": "%Y-%m-%d %H:%M:%S",
        },
    },
    "handlers": {},
    "loggers": {
        "Nexemy-logger": {
            "level": "DEBUG",
            "handlers": [],
            "propagate": True,
        },
    },
}
